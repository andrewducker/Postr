<!DOCTYPE html>
<html>
	<head>
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<title>Postr</title>
		<link rel="stylesheet" href="persona-buttons.css" />
		<script src="http://login.persona.org/include.js"></script>
		<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
		<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.0/themes/base/jquery-ui.css">
		<link rel="stylesheet" href ="styles.css">
		<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.2/jquery-ui.min.js"></script>
		<script src="laconic.js"></script>
		<script src="wizards.js"></script>
		<script src="timezones.js"></script>
		<script src="persona.js.vm"></script>
		<script type="text/javascript">
			outputs = new Object();
			inputs = new Object();
			function AddOutput(outputName, AddOutput, UpdateOutput, PostFromOutput) {
				$("#output").append(new Option(outputName));
				outputs[outputName] = {Add:AddOutput,Update:UpdateOutput,Post:PostFromOutput};
			}
			
			function AddInput(inputName, AddInput) {
				$("#input").append(new Option(inputName));
				inputs[inputName] = {Add:AddInput};
			}

			function addNewComboItem(id, text, data){
				var newOption = new Option(text);
				$(id).append(newOption);
				var newComboItem = $(id+' option:last-child');
				newComboItem.data(data);
			}

			function addNewOutput(data){
				addNewComboItem("#existingOutputs",data.userName+"@"+data.siteName,data);
			}

			function addNewInput(data){
				addNewComboItem("#existingInputs",data.userName+"@"+data.siteName,data);
			}
			
			function j(id){
				return $('#'+id);
			}
		</script>
	</head>
	<body>
		You are signed in as $userdata.Persona <a class="persona-button orange" onclick= "navigator.id.logout()"><span>Sign out</span> </a>
		
		<fieldset>
			<legend>Outputs</legend>
			<select id="existingOutputs">
			#if($userdata.Outputs.size() > 0)
			#foreach($output in $userdata.Outputs)<option data-user-name=${output.UserName} data-key=${output.Id} data-site-name=$output.SiteName data-time-zone=$output.TimeZone.ID>
			${output.UserName}@$output.SiteName</option>#end
			#end
			</select>
			<label for="PostFromOutput">Existing</label>
			<input type="submit" id="PostFromOutput" value="Post">
			<label for="UpdateOutputs">Existing</label>
			<input type="submit" id="UpdateOutputs" value="Update">
			<label for="RemoveOutputs">Existing</label>
			<input type="submit" id="RemoveOutputs" value="Remove">
			<BR>
			<select id="output" name="output">
			</select>
			<label for="AddNewOutput">New Output?</label>
			<input type="submit" id="AddNewOutput" value="Add">
		</fieldset>
		
		<fieldset>
			<legend>Inputs</legend>
			<select id="existingInputs">
			#if($userdata.Inputs.size() > 0)
			#foreach($input in $userdata.Inputs)<option data-user-name=${input.UserName} data-key=${input.Id} data-site-name=$input.SiteName>
			${input.UserName}@$input.SiteName</option>#end
			#end
			</select>
			<label for="RemoveIntputs">Existing</label>
			<input type="submit" id="RemoveInputs" value="Remove">
			<BR>
			<select id="input" name="input">
			</select>
			<label for="AddNewInput">New Input?</label>
			<input type="submit" id="AddNewInput" value="Add">
		</fieldset>

<script src="outputs/Livejournal.js"></script>
<script src="inputs/StandardInput.js"></script>

		<script type="text/javascript">
			$(function(){
				var dreamwidth = new Livejournal("Dreamwidth","dreamwidth","dw");
				var dreamwidth = new Livejournal("Livejournal","livejournal","lj");
				var delicious = new StandardInput("Delicious","delicious");
				var pinboard = new StandardInput("Pinboard","pinboard");
				$( "#AddNewOutput" ).click(function() {
					var selectedValue = $("#output option:selected").text();
					outputs[selectedValue].Add().done(function(data){
						addNewOutput(data);
						DisableIfComboEmpty("#existingOutputs","#RemoveOutputs")
						DisableIfComboEmpty("#existingOutputs","#UpdateOutputs")
						DisableIfComboEmpty("#existingOutputs","#PostFromOutput")
					});
				});
				$( "#PostFromOutput" ).click(function() {
					var selectedOption = $("#existingOutputs option:selected");
					var selectedData = selectedOption.data();
					outputs[selectedData.siteName].Post(selectedData)
				});
				$( "#UpdateOutputs" ).click(function() {
					var selectedOption = $("#existingOutputs option:selected");
					var selectedData = selectedOption.data();
					outputs[selectedData.siteName].Update(selectedData)
				});
				$( "#RemoveOutputs" ).click(function() {
					var selectedData = $("#existingOutputs option:selected").data();
					RemoveData(selectedData.key).done(function(){
						$("#existingOutputs option:selected").remove();
						DisableIfComboEmpty("#existingOutputs","#RemoveOutputs")
						DisableIfComboEmpty("#existingOutputs","#UpdateOutputs")
						DisableIfComboEmpty("#existingOutputs","#PostFromOutput")
					});
				});
				$( "#AddNewInput" ).click(function() {
					var selectedValue = $("#input option:selected").text();
					inputs[selectedValue].Add().done(function(data){
						addNewInput(data);
						DisableIfComboEmpty("#existingInputs","#RemoveInputs")
						DisableIfComboEmpty("#existingOutputs","#PostFromOutput")
					});
				});
				$( "#RemoveInputs" ).click(function() {
					var selectedData = $("#existingInputs option:selected").data();
					RemoveData(selectedData.key).done(function(){
						$("#existingInputs option:selected").remove();
						DisableIfComboEmpty("#existingInputs","#RemoveInputs")
					});
				});
				DisableIfComboEmpty("#existingOutputs","#RemoveOutputs")
				DisableIfComboEmpty("#existingOutputs","#UpdateOutputs")
				DisableIfComboEmpty("#existingInputs","#RemoveInputs")
				DisableIfComboEmpty("#existingOutputs","#PostFromOutput")
			});
			
			function DisableIfComboEmpty(comboID, itemID){
				SetDisabledState(itemID,ComboEmpty(comboID));
			}
			
			function SetDisabledState(itemID, state){
				if(state){
					$(itemID).prop('disabled','disabled');
				}
				else{
					$(itemID).removeProp('disabled');
				}
			}
			
			function ComboEmpty(comboID){
				return $(comboID + " option").length == 0;
			}
			
			function RemoveData(key){
				var params = {method:"RemoveData", key:parseInt(key)};
				var deferral = jQuery.post("datamanagement",{params:JSON.stringify(params)});
				wizards.registerCallForWizardDisplay(deferral);
				return deferral;
			}
		</script>
	</body>
</html>